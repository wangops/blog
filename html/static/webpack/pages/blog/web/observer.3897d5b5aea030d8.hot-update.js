"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/blog/web/observer",{

/***/ "./src/pages/blog/web/observer.mdx":
/*!*****************************************!*\
  !*** ./src/pages/blog/web/observer.mdx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MDXContent; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_mdx_import_source_file__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-mdx-import-source-file */ \"./src/mdx-components.tsx\");\n/* harmony import */ var react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-syntax-highlighter */ \"./node_modules/react-syntax-highlighter/dist/esm/index.js\");\n\n\n\nfunction _createMdxContent(props) {\n    const _components = {\n        h4: \"h4\",\n        h6: \"h6\",\n        p: \"p\",\n        ...(0,next_mdx_import_source_file__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n        ...props.components\n    };\n    return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mdx-box\",\n        children: [\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"用于异步地观察目标元素与其祖先元素或顶级文档视窗（viewport）交叉的情况。它提供了一种更有效率和性能更好的方法来实现各种观察情况，比如实现懒加载图片、无限滚动等场景。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 6,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 7,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h4, {\n                children: \"1.主要特点和用途：\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 8,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 9,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"\\xa0\\xa0\\xa0\\xa0\\xa0IntersectionObserver 是异步执行的，不会随着目标元素的变化而导致页面的重排或重绘，这一点与传统的监听滚动事件或者使用 getBoundingClientRect() 不同。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 10,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 11,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"\\xa0\\xa0\\xa0\\xa0\\xa0通过 IntersectionObserver 可以在不影响主线程的情况下监听多个目标元素的可见性变化，这有助于减少不必要的计算和优化页面性能。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 12,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 13,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"\\xa0\\xa0\\xa0\\xa0\\xa0可以通过配置选项（root、rootMargin、thresholds）来更精确地定义观察器的行为。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 14,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 15,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"\\xa0\\xa0\\xa0\\xa0\\xa0 \\xa0 \\xa0 root：指定目标元素的祖先元素，如果不指定则默认为浏览器视口。\\r\\n\\xa0\\xa0\\xa0\\xa0\\xa0 \\xa0 \\xa0 rootMargin：指定根元素的边界，用于扩展或缩小根元素的边界框，以便更早或更晚地触发可见性变化。\\r\\n\\xa0\\xa0\\xa0\\xa0\\xa0 \\xa0 \\xa0 thresholds：指定一个或多个阈值数组，表示目标元素交叉根元素的比例阈值，触发回调函数。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 16,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 19,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h4, {\n                children: \"应用场景：\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 20,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 21,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"\\xa0\\xa0\\xa0\\xa0 图片懒加载：在图片即将进入视口时再加载真实图片。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 22,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 23,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"\\xa0\\xa0\\xa0\\xa0 无限滚动：监听滚动到底部时加载更多内容。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 24,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 25,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"\\xa0\\xa0\\xa0\\xa0 广告展示：当广告进入视口时开始播放或加载。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 26,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 27,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"\\xa0\\xa0\\xa0\\xa0 用户追踪：监控用户是否看到某些内容或广告的展示情况。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 28,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 29,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h4, {\n                children: \"示例代码：\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 30,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 31,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_2__.Prism, {\n                language: \"javascript\",\n                children: '\\n    document.addEventListener(\"DOMContentLoaded\", function() {\\n        let lazyImages = document.querySelectorAll(\".lazy-image\");\\n\\n        let observer = new IntersectionObserver(entries => {\\n            entries.forEach(entry => {\\n            if (entry.isIntersecting) {\\n                let img = entry.target;\\n                img.src = img.getAttribute(\"data-src\");\\n                observer.unobserve(img); // 停止观察该图片\\n            }\\n            });\\n        }, {\\n            root: null, // 默认为浏览器视口\\n            rootMargin: \\'0px\\', // 观察窗口的边界\\n            threshold: 0.1 // 10%的可见度时触发回调\\n        });\\n\\n        lazyImages.forEach(img => {\\n            observer.observe(img);\\n        });\\n        });\\n'\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 32,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 57,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"创建了一个 IntersectionObserver 实例，并通过配置项指定了观察的条件。当图片进入浏览器视口时，观察器的回调函数会执行，从而开始加载图片。这种方法比传统的滚动事件和 getBoundingClientRect() 更高效和易于管理，特别适合处理大量图片的懒加载场景。\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 58,\n                columnNumber: 1\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h6, {\n                children: \"\\xa0\"\n            }, undefined, false, {\n                fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n                lineNumber: 59,\n                columnNumber: 1\n            }, this)\n        ]\n    }, undefined, true, {\n        fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\",\n        lineNumber: 5,\n        columnNumber: 1\n    }, this);\n}\nfunction MDXContent() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { wrapper: MDXLayout } = {\n        ...(0,next_mdx_import_source_file__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n        ...props.components\n    };\n    return MDXLayout ? (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MDXLayout, {\n        ...props,\n        children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_createMdxContent, {\n            ...props\n        }, undefined, false, {\n            fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\"\n        }, this)\n    }, undefined, false, {\n        fileName: \"D:\\\\Dev\\\\Projects\\\\blog\\\\src\\\\pages\\\\blog\\\\web\\\\observer.mdx\"\n    }, this) : _createMdxContent(props);\n}\n_c = MDXContent;\nvar _c;\n$RefreshReg$(_c, \"MDXContent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvYmxvZy93ZWIvb2JzZXJ2ZXIubWR4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDMkM7Ozs7Ozs7Ozs7Ozs7MEJBSTNDOzs7Ozs7OzBCQUNPOzs7Ozs7OzBCQUNGOzs7Ozs7OzBCQUNFOzs7Ozs7OzBCQUNQOzs7Ozs7OzBCQUNPOzs7Ozs7OzBCQUNQOzs7Ozs7OzBCQUNPOzs7Ozs7OzBCQUNQOzs7Ozs7OzBCQUNPOzs7Ozs7OzBCQUNQOzs7Ozs7OzBCQUdPOzs7Ozs7OzBCQUNGOzs7Ozs7OzBCQUNFOzs7Ozs7OzBCQUNQOzs7Ozs7OzBCQUNPOzs7Ozs7OzBCQUNQOzs7Ozs7OzBCQUNPOzs7Ozs7OzBCQUNQOzs7Ozs7OzBCQUNPOzs7Ozs7OzBCQUNQOzs7Ozs7OzBCQUNPOzs7Ozs7OzBCQUNGOzs7Ozs7OzBCQUNFOzs7Ozs7OzswQkFFSDs7Ozs7OzswQkF3Qkc7Ozs7Ozs7MEJBQ1A7Ozs7Ozs7MEJBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL2Jsb2cvd2ViL29ic2VydmVyLm1keD8wMzI5Il0sIm5hbWVzIjpbIlByaXNtIiwiU3ludGF4SGlnaGxpZ2h0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/blog/web/observer.mdx\n"));

/***/ })

});